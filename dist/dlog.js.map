{"version":3,"sources":["webpack://dlog/webpack/universalModuleDefinition","webpack://dlog/webpack/bootstrap","webpack://dlog/./src/app/index.js","webpack://dlog/./src/app/utils.js","webpack://dlog/./src/app/argChecker.js","webpack://dlog/./node_modules/error-stack-parser/error-stack-parser.js","webpack://dlog/./node_modules/stackframe/stackframe.js","webpack://dlog/./node_modules/ms/index.js"],"names":["root","factory","exports","module","define","amd","this","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","utils","require","argChecker","ErrorStackParser","ms","mostRecentTimeStamp","dlog","logger","config","log","logObj","meta","include","exclude","outputLogger","typeCheck","argCheck","timing","file","isObject","metaOut","current","Date","Math","abs","defaultOutputLogger","undefined","console","logRoot","keys","length","msg","JSON","stringify","Error","logKeyName","includeMatches","includes","filter","item","excludeMatches","forcedErr","errStack","parse","arguments","argCheckMsg","createLogger","el","Array","isArray","hasKeys","args","argArr","values","paramCount","message","StackFrame","FIREFOX_SAFARI_STACK_REGEXP","CHROME_IE_STACK_REGEXP","SAFARI_NATIVE_CODE_REGEXP","error","stacktrace","parseOpera","stack","match","parseV8OrIE","parseFFOrSafari","extractLocation","urlLike","indexOf","parts","exec","replace","split","line","map","sanitizedLine","location","tokens","slice","locationParts","pop","functionName","join","fileName","lineNumber","columnNumber","source","functionNameRegex","matches","e","parseOpera9","parseOpera11","parseOpera10","lineRE","lines","result","len","push","argsRaw","functionCall","shift","_capitalize","str","charAt","toUpperCase","substring","_getter","booleanProps","numericProps","stringProps","props","concat","obj","getArgs","setArgs","v","toString","TypeError","getEvalOrigin","evalOrigin","setEvalOrigin","getFileName","getLineNumber","getColumnNumber","getFunctionName","getIsEval","fromString","argsStartIndex","argsEndIndex","lastIndexOf","locationString","Boolean","j","isNaN","parseFloat","isFinite","Number","k","String","h","plural","msAbs","isPlural","round","val","options","type","toLowerCase","long","fmtLong","fmtShort"],"mappings":"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","file":"dlog.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"dlog\"] = factory();\n\telse\n\t\troot[\"dlog\"] = factory();\n})(this, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","'use strict';\n//const callDiff = require('./callDiff.js');\nconst utils = require('./utils');\nconst argChecker = require('./argChecker');\nconst ErrorStackParser = require('error-stack-parser');\nconst ms = require('ms');\n\nlet mostRecentTimeStamp;\n\nconst dlog = {\n  logger: {\n    config: {},\n\n    log: function(logObj, meta) {\n      const {\n        include,\n        exclude,\n        typeCheck,\n        outputLogger,\n        argCheck,\n        timing,\n        file\n      } = this.config;\n\n      const { isObject } = utils;\n\n      const metaOut = {};\n\n      if (timing) {\n        const current = new Date();\n        if (mostRecentTimeStamp) {\n          metaOut.timing = ms(Math.abs(current - mostRecentTimeStamp));\n        }\n        mostRecentTimeStamp = current;\n      }\n      let defaultOutputLogger;\n      if (outputLogger === undefined || typeof outputLogger !== 'function') {\n        defaultOutputLogger = console.log;\n      }\n      const logRoot = Object.keys(logObj);\n\n      if (logRoot.length != 1 || !isObject(logObj[logRoot])) {\n        const msg = `[dlog] Invalid log format.\n          dlog takes an object with one key. \n          i.e: dlog.log( { somefunctionName : {param1, param2,...} } );\n          but seems called as:    \n          dlog.log ( ${JSON.stringify(logObj)} )`;\n        throw new Error(msg);\n      }\n      const logKeyName = logRoot[0];\n\n      const includeMatches = include.includes('*')\n        ? ['one-length-array']\n        : include.filter(item => {\n            return item === logKeyName;\n          });\n\n      const excludeMatches = exclude.filter(item => {\n        return item === logKeyName;\n      });\n\n      if (includeMatches.length === 1 && excludeMatches.length === 0) {\n        const forcedErr = new Error();\n        const errStack = ErrorStackParser.parse(forcedErr);\n\n        if (file) {\n          metaOut.file = errStack;\n        }\n        // console.log('________', forcedErr);\n        // const chop = forcedErr.stack\n        //   .split('\\n')[2]\n        //   .split('at ')[1]\n        //   .split(':');\n        // const srcFile = chop[0];\n        // // const srcLine = chop[1];\n        // const parentLine = chop[2];\n\n        // if (file) {\n        //   metaOut.file = srcFile;\n        // }\n\n        if (typeCheck) {\n          //   callDiff(file, parentLine, logObj);\n        }\n\n        outputLogger\n          ? outputLogger(logObj, metaOut)\n          : defaultOutputLogger(logObj, metaOut);\n\n        if (argCheck && meta && meta.arguments) {\n          const argCheckMsg = argChecker(logObj, meta.arguments);\n          if (argCheckMsg) {\n            outputLogger\n              ? outputLogger(argCheckMsg)\n              : defaultOutputLogger(argCheckMsg);\n          }\n        }\n\n        return logObj;\n      }\n    }\n  },\n\n  createLogger: function(config) {\n    this.logger.config = config;\n    return this.logger;\n  }\n};\n\nmodule.exports = dlog;\n","// in purset sense isObject rejects arrays as differnt type.\nconst isObject = el => {\n  return el instanceof Object && !Array.isArray(el);\n};\nconst hasKeys = el => {\n  return isObject(el) && Object.keys(el).length >= 1;\n};\n\nmodule.exports = { isObject, hasKeys };\n","/*\nchecks if count of named parameters differs to actual arguments passed.\nlogObj:  {fname: {p1,p2,}}\nargs:  { '0': 1, '1': 2, '3': 3 }  // conforms to js arguments interface.\n*/\nconst argChecker = (logObj, args) => {\n  const keys = Object.keys(logObj);\n  let argArr = Object.values(args);\n  let paramCount = 0;\n  if (keys.length >= 1) {\n    paramCount = Object.keys(logObj[keys[0]]).length;\n  }\n  if (paramCount !== argArr.length) {\n    const message = `[ArgCheck Warning] ${keys[0]}: ${paramCount} params : ${argArr.length} args. args: [${argArr}]`;\n    return message;\n  }\n};\n\nmodule.exports = argChecker;\n","(function(root, factory) {\n    'use strict';\n    // Universal Module Definition (UMD) to support AMD, CommonJS/Node.js, Rhino, and browsers.\n\n    /* istanbul ignore next */\n    if (typeof define === 'function' && define.amd) {\n        define('error-stack-parser', ['stackframe'], factory);\n    } else if (typeof exports === 'object') {\n        module.exports = factory(require('stackframe'));\n    } else {\n        root.ErrorStackParser = factory(root.StackFrame);\n    }\n}(this, function ErrorStackParser(StackFrame) {\n    'use strict';\n\n    var FIREFOX_SAFARI_STACK_REGEXP = /(^|@)\\S+:\\d+/;\n    var CHROME_IE_STACK_REGEXP = /^\\s*at .*(\\S+:\\d+|\\(native\\))/m;\n    var SAFARI_NATIVE_CODE_REGEXP = /^(eval@)?(\\[native code])?$/;\n\n    return {\n        /**\n         * Given an Error object, extract the most information from it.\n         *\n         * @param {Error} error object\n         * @return {Array} of StackFrames\n         */\n        parse: function ErrorStackParser$$parse(error) {\n            if (typeof error.stacktrace !== 'undefined' || typeof error['opera#sourceloc'] !== 'undefined') {\n                return this.parseOpera(error);\n            } else if (error.stack && error.stack.match(CHROME_IE_STACK_REGEXP)) {\n                return this.parseV8OrIE(error);\n            } else if (error.stack) {\n                return this.parseFFOrSafari(error);\n            } else {\n                throw new Error('Cannot parse given Error object');\n            }\n        },\n\n        // Separate line and column numbers from a string of the form: (URI:Line:Column)\n        extractLocation: function ErrorStackParser$$extractLocation(urlLike) {\n            // Fail-fast but return locations like \"(native)\"\n            if (urlLike.indexOf(':') === -1) {\n                return [urlLike];\n            }\n\n            var regExp = /(.+?)(?::(\\d+))?(?::(\\d+))?$/;\n            var parts = regExp.exec(urlLike.replace(/[()]/g, ''));\n            return [parts[1], parts[2] || undefined, parts[3] || undefined];\n        },\n\n        parseV8OrIE: function ErrorStackParser$$parseV8OrIE(error) {\n            var filtered = error.stack.split('\\n').filter(function(line) {\n                return !!line.match(CHROME_IE_STACK_REGEXP);\n            }, this);\n\n            return filtered.map(function(line) {\n                if (line.indexOf('(eval ') > -1) {\n                    // Throw away eval information until we implement stacktrace.js/stackframe#8\n                    line = line.replace(/eval code/g, 'eval').replace(/(\\(eval at [^()]*)|(\\),.*$)/g, '');\n                }\n                var sanitizedLine = line.replace(/^\\s+/, '').replace(/\\(eval code/g, '(');\n\n                // capture and preseve the parenthesized location \"(/foo/my bar.js:12:87)\" in\n                // case it has spaces in it, as the string is split on \\s+ later on\n                var location = sanitizedLine.match(/ (\\((.+):(\\d+):(\\d+)\\)$)/);\n\n                // remove the parenthesized location from the line, if it was matched\n                sanitizedLine = location ? sanitizedLine.replace(location[0], '') : sanitizedLine;\n\n                var tokens = sanitizedLine.split(/\\s+/).slice(1);\n                // if a location was matched, pass it to extractLocation() otherwise pop the last token\n                var locationParts = this.extractLocation(location ? location[1] : tokens.pop());\n                var functionName = tokens.join(' ') || undefined;\n                var fileName = ['eval', '<anonymous>'].indexOf(locationParts[0]) > -1 ? undefined : locationParts[0];\n\n                return new StackFrame({\n                    functionName: functionName,\n                    fileName: fileName,\n                    lineNumber: locationParts[1],\n                    columnNumber: locationParts[2],\n                    source: line\n                });\n            }, this);\n        },\n\n        parseFFOrSafari: function ErrorStackParser$$parseFFOrSafari(error) {\n            var filtered = error.stack.split('\\n').filter(function(line) {\n                return !line.match(SAFARI_NATIVE_CODE_REGEXP);\n            }, this);\n\n            return filtered.map(function(line) {\n                // Throw away eval information until we implement stacktrace.js/stackframe#8\n                if (line.indexOf(' > eval') > -1) {\n                    line = line.replace(/ line (\\d+)(?: > eval line \\d+)* > eval:\\d+:\\d+/g, ':$1');\n                }\n\n                if (line.indexOf('@') === -1 && line.indexOf(':') === -1) {\n                    // Safari eval frames only have function names and nothing else\n                    return new StackFrame({\n                        functionName: line\n                    });\n                } else {\n                    var functionNameRegex = /((.*\".+\"[^@]*)?[^@]*)(?:@)/;\n                    var matches = line.match(functionNameRegex);\n                    var functionName = matches && matches[1] ? matches[1] : undefined;\n                    var locationParts = this.extractLocation(line.replace(functionNameRegex, ''));\n\n                    return new StackFrame({\n                        functionName: functionName,\n                        fileName: locationParts[0],\n                        lineNumber: locationParts[1],\n                        columnNumber: locationParts[2],\n                        source: line\n                    });\n                }\n            }, this);\n        },\n\n        parseOpera: function ErrorStackParser$$parseOpera(e) {\n            if (!e.stacktrace || (e.message.indexOf('\\n') > -1 &&\n                e.message.split('\\n').length > e.stacktrace.split('\\n').length)) {\n                return this.parseOpera9(e);\n            } else if (!e.stack) {\n                return this.parseOpera10(e);\n            } else {\n                return this.parseOpera11(e);\n            }\n        },\n\n        parseOpera9: function ErrorStackParser$$parseOpera9(e) {\n            var lineRE = /Line (\\d+).*script (?:in )?(\\S+)/i;\n            var lines = e.message.split('\\n');\n            var result = [];\n\n            for (var i = 2, len = lines.length; i < len; i += 2) {\n                var match = lineRE.exec(lines[i]);\n                if (match) {\n                    result.push(new StackFrame({\n                        fileName: match[2],\n                        lineNumber: match[1],\n                        source: lines[i]\n                    }));\n                }\n            }\n\n            return result;\n        },\n\n        parseOpera10: function ErrorStackParser$$parseOpera10(e) {\n            var lineRE = /Line (\\d+).*script (?:in )?(\\S+)(?:: In function (\\S+))?$/i;\n            var lines = e.stacktrace.split('\\n');\n            var result = [];\n\n            for (var i = 0, len = lines.length; i < len; i += 2) {\n                var match = lineRE.exec(lines[i]);\n                if (match) {\n                    result.push(\n                        new StackFrame({\n                            functionName: match[3] || undefined,\n                            fileName: match[2],\n                            lineNumber: match[1],\n                            source: lines[i]\n                        })\n                    );\n                }\n            }\n\n            return result;\n        },\n\n        // Opera 10.65+ Error.stack very similar to FF/Safari\n        parseOpera11: function ErrorStackParser$$parseOpera11(error) {\n            var filtered = error.stack.split('\\n').filter(function(line) {\n                return !!line.match(FIREFOX_SAFARI_STACK_REGEXP) && !line.match(/^Error created at/);\n            }, this);\n\n            return filtered.map(function(line) {\n                var tokens = line.split('@');\n                var locationParts = this.extractLocation(tokens.pop());\n                var functionCall = (tokens.shift() || '');\n                var functionName = functionCall\n                    .replace(/<anonymous function(: (\\w+))?>/, '$2')\n                    .replace(/\\([^)]*\\)/g, '') || undefined;\n                var argsRaw;\n                if (functionCall.match(/\\(([^)]*)\\)/)) {\n                    argsRaw = functionCall.replace(/^[^(]+\\(([^)]*)\\)$/, '$1');\n                }\n                var args = (argsRaw === undefined || argsRaw === '[arguments not available]') ?\n                    undefined : argsRaw.split(',');\n\n                return new StackFrame({\n                    functionName: functionName,\n                    args: args,\n                    fileName: locationParts[0],\n                    lineNumber: locationParts[1],\n                    columnNumber: locationParts[2],\n                    source: line\n                });\n            }, this);\n        }\n    };\n}));\n","(function(root, factory) {\n    'use strict';\n    // Universal Module Definition (UMD) to support AMD, CommonJS/Node.js, Rhino, and browsers.\n\n    /* istanbul ignore next */\n    if (typeof define === 'function' && define.amd) {\n        define('stackframe', [], factory);\n    } else if (typeof exports === 'object') {\n        module.exports = factory();\n    } else {\n        root.StackFrame = factory();\n    }\n}(this, function() {\n    'use strict';\n    function _isNumber(n) {\n        return !isNaN(parseFloat(n)) && isFinite(n);\n    }\n\n    function _capitalize(str) {\n        return str.charAt(0).toUpperCase() + str.substring(1);\n    }\n\n    function _getter(p) {\n        return function() {\n            return this[p];\n        };\n    }\n\n    var booleanProps = ['isConstructor', 'isEval', 'isNative', 'isToplevel'];\n    var numericProps = ['columnNumber', 'lineNumber'];\n    var stringProps = ['fileName', 'functionName', 'source'];\n    var arrayProps = ['args'];\n\n    var props = booleanProps.concat(numericProps, stringProps, arrayProps);\n\n    function StackFrame(obj) {\n        if (!obj) return;\n        for (var i = 0; i < props.length; i++) {\n            if (obj[props[i]] !== undefined) {\n                this['set' + _capitalize(props[i])](obj[props[i]]);\n            }\n        }\n    }\n\n    StackFrame.prototype = {\n        getArgs: function() {\n            return this.args;\n        },\n        setArgs: function(v) {\n            if (Object.prototype.toString.call(v) !== '[object Array]') {\n                throw new TypeError('Args must be an Array');\n            }\n            this.args = v;\n        },\n\n        getEvalOrigin: function() {\n            return this.evalOrigin;\n        },\n        setEvalOrigin: function(v) {\n            if (v instanceof StackFrame) {\n                this.evalOrigin = v;\n            } else if (v instanceof Object) {\n                this.evalOrigin = new StackFrame(v);\n            } else {\n                throw new TypeError('Eval Origin must be an Object or StackFrame');\n            }\n        },\n\n        toString: function() {\n            var fileName = this.getFileName() || '';\n            var lineNumber = this.getLineNumber() || '';\n            var columnNumber = this.getColumnNumber() || '';\n            var functionName = this.getFunctionName() || '';\n            if (this.getIsEval()) {\n                if (fileName) {\n                    return '[eval] (' + fileName + ':' + lineNumber + ':' + columnNumber + ')';\n                }\n                return '[eval]:' + lineNumber + ':' + columnNumber;\n            }\n            if (functionName) {\n                return functionName + ' (' + fileName + ':' + lineNumber + ':' + columnNumber + ')';\n            }\n            return fileName + ':' + lineNumber + ':' + columnNumber;\n        }\n    };\n\n    StackFrame.fromString = function StackFrame$$fromString(str) {\n        var argsStartIndex = str.indexOf('(');\n        var argsEndIndex = str.lastIndexOf(')');\n\n        var functionName = str.substring(0, argsStartIndex);\n        var args = str.substring(argsStartIndex + 1, argsEndIndex).split(',');\n        var locationString = str.substring(argsEndIndex + 1);\n\n        if (locationString.indexOf('@') === 0) {\n            var parts = /@(.+?)(?::(\\d+))?(?::(\\d+))?$/.exec(locationString, '');\n            var fileName = parts[1];\n            var lineNumber = parts[2];\n            var columnNumber = parts[3];\n        }\n\n        return new StackFrame({\n            functionName: functionName,\n            args: args || undefined,\n            fileName: fileName,\n            lineNumber: lineNumber || undefined,\n            columnNumber: columnNumber || undefined\n        });\n    };\n\n    for (var i = 0; i < booleanProps.length; i++) {\n        StackFrame.prototype['get' + _capitalize(booleanProps[i])] = _getter(booleanProps[i]);\n        StackFrame.prototype['set' + _capitalize(booleanProps[i])] = (function(p) {\n            return function(v) {\n                this[p] = Boolean(v);\n            };\n        })(booleanProps[i]);\n    }\n\n    for (var j = 0; j < numericProps.length; j++) {\n        StackFrame.prototype['get' + _capitalize(numericProps[j])] = _getter(numericProps[j]);\n        StackFrame.prototype['set' + _capitalize(numericProps[j])] = (function(p) {\n            return function(v) {\n                if (!_isNumber(v)) {\n                    throw new TypeError(p + ' must be a Number');\n                }\n                this[p] = Number(v);\n            };\n        })(numericProps[j]);\n    }\n\n    for (var k = 0; k < stringProps.length; k++) {\n        StackFrame.prototype['get' + _capitalize(stringProps[k])] = _getter(stringProps[k]);\n        StackFrame.prototype['set' + _capitalize(stringProps[k])] = (function(p) {\n            return function(v) {\n                this[p] = String(v);\n            };\n        })(stringProps[k]);\n    }\n\n    return StackFrame;\n}));\n","/**\n * Helpers.\n */\n\nvar s = 1000;\nvar m = s * 60;\nvar h = m * 60;\nvar d = h * 24;\nvar w = d * 7;\nvar y = d * 365.25;\n\n/**\n * Parse or format the given `val`.\n *\n * Options:\n *\n *  - `long` verbose formatting [false]\n *\n * @param {String|Number} val\n * @param {Object} [options]\n * @throws {Error} throw an error if val is not a non-empty string or a number\n * @return {String|Number}\n * @api public\n */\n\nmodule.exports = function(val, options) {\n  options = options || {};\n  var type = typeof val;\n  if (type === 'string' && val.length > 0) {\n    return parse(val);\n  } else if (type === 'number' && isFinite(val)) {\n    return options.long ? fmtLong(val) : fmtShort(val);\n  }\n  throw new Error(\n    'val is not a non-empty string or a valid number. val=' +\n      JSON.stringify(val)\n  );\n};\n\n/**\n * Parse the given `str` and return milliseconds.\n *\n * @param {String} str\n * @return {Number}\n * @api private\n */\n\nfunction parse(str) {\n  str = String(str);\n  if (str.length > 100) {\n    return;\n  }\n  var match = /^(-?(?:\\d+)?\\.?\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)?$/i.exec(\n    str\n  );\n  if (!match) {\n    return;\n  }\n  var n = parseFloat(match[1]);\n  var type = (match[2] || 'ms').toLowerCase();\n  switch (type) {\n    case 'years':\n    case 'year':\n    case 'yrs':\n    case 'yr':\n    case 'y':\n      return n * y;\n    case 'weeks':\n    case 'week':\n    case 'w':\n      return n * w;\n    case 'days':\n    case 'day':\n    case 'd':\n      return n * d;\n    case 'hours':\n    case 'hour':\n    case 'hrs':\n    case 'hr':\n    case 'h':\n      return n * h;\n    case 'minutes':\n    case 'minute':\n    case 'mins':\n    case 'min':\n    case 'm':\n      return n * m;\n    case 'seconds':\n    case 'second':\n    case 'secs':\n    case 'sec':\n    case 's':\n      return n * s;\n    case 'milliseconds':\n    case 'millisecond':\n    case 'msecs':\n    case 'msec':\n    case 'ms':\n      return n;\n    default:\n      return undefined;\n  }\n}\n\n/**\n * Short format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtShort(ms) {\n  var msAbs = Math.abs(ms);\n  if (msAbs >= d) {\n    return Math.round(ms / d) + 'd';\n  }\n  if (msAbs >= h) {\n    return Math.round(ms / h) + 'h';\n  }\n  if (msAbs >= m) {\n    return Math.round(ms / m) + 'm';\n  }\n  if (msAbs >= s) {\n    return Math.round(ms / s) + 's';\n  }\n  return ms + 'ms';\n}\n\n/**\n * Long format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtLong(ms) {\n  var msAbs = Math.abs(ms);\n  if (msAbs >= d) {\n    return plural(ms, msAbs, d, 'day');\n  }\n  if (msAbs >= h) {\n    return plural(ms, msAbs, h, 'hour');\n  }\n  if (msAbs >= m) {\n    return plural(ms, msAbs, m, 'minute');\n  }\n  if (msAbs >= s) {\n    return plural(ms, msAbs, s, 'second');\n  }\n  return ms + ' ms';\n}\n\n/**\n * Pluralization helper.\n */\n\nfunction plural(ms, msAbs, n, name) {\n  var isPlural = msAbs >= n * 1.5;\n  return Math.round(ms / n) + ' ' + name + (isPlural ? 's' : '');\n}\n"],"sourceRoot":""}